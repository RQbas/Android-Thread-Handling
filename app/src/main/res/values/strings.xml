<resources>
    <string name="app_name">Thread Handling</string>
    <string name="title">Title</string>
    <string name="description">Description</string>
    <string name="title_activity_pipe">Pipe communication</string>
    <string name="pipe_title">Pipe communication</string>
    <string name="pipe_short_desc">Caesar\'s cipher implemented using pipe approach as a fundamental of communication</string>
    <string name="input_text">Input text</string>
    <string name="pipe_input_text">Text to encrypt</string>
    <string name="timer_example_display">0 ms</string>
    <string name="encrypted_text">Encrypted text</string>
    <string name="pipes">Pipes</string>
    <string name="activity">Activity</string>
    <string name="thread_communication">Thread communication</string>
    <string name="pipes_description">Pipes are based on consumer-producer pattern with blocking mechanism. Life cycle of pipe consists of three stages: setup, transfer and disconnection. Setup is strictly speaking the initialization of objects and pairing them. Communication is based on calling methods read and write. Data can be transferred as characters or bytes (PipedInputStream). The final step is calling close method on both objects.</string>
    <string name="pipes_example">This example shows usage of pipes in android to communicate between threads. Character entered in the input field  is sent through the pipe and then it is encrypted using caesar cipher. After encryption, UI thread is refreshed - encrypted character is shown and the duration of communication process is measured.  Since UI thread is involved with pipes there is possible blocking of calls and all processing is not so fast.</string>
    <string name="message_passing_title">Message Passing</string>
    <string name="message_passing_short_desc">Short description of message passing activity</string>

</resources>
